@page "/Account/Register"

@layout RegisterLayout

@attribute [StreamRendering]
@rendermode RenderMode.InteractiveServer

@inject IHttpClientFactory clientFactory
@inject NavigationManager navigationManager

<PageTitle>Registration</PageTitle>

<div class="card-header pt-4 pb-4 text-center bg-primary">
    <span><img src="Images/logo.png" alt="" height="60"></span>
</div>

<!-- Logo -->
<div class="auth-brand text-center text-lg-start">
    <a href="index.html" class="logo-dark">
        <span><img src="assets/images/logo-dark.png" alt="" height="18"></span>
    </a>
    <a href="index.html" class="logo-light">
        <span><img src="assets/images/logo.png" alt="" height="18"></span>
    </a>
</div>

<!-- title-->
<h4 class="mt-0">Бесплатная регистрация</h4>
<p class="text-muted mb-4">У вас нет учетной записи? Создайте свою учетную запись, это займет меньше минуты</p>

<!-- form -->
<form action="#">
    <div class="mb-3">
        <input @bind-value="login.Password" type="password" class="form-control" placeholder="Введите свой пароль" required>
    </div>

    <div class="mb-3">
        <label class="form-label">PasswordConfirm</label>
        <input @bind-value="login.PasswordConfirm" type="password" class="form-control" placeholder="Повторите свой пароль" required>
    </div>
    <div class="mb-3">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="checkbox-signup">
            <label class="form-check-label" for="checkbox-signup">I accept <a href="javascript: void(0);" class="text-muted">Terms and Conditions</a></label>
        </div>
    </div>

    @if (statusMessage != null)
    {
        <div class="alert-danger mb-1">
            @statusMessage
        </div>
    }

    <div class="mb-0 d-grid text-center">
        <button class="btn btn-primary" type="submit" @onclick="Submit"><i class="mdi mdi-account-circle"></i> Зарегистрироваться </button>
    </div>
    <!-- social-->
    <div class="text-center mt-4">
        <p class="text-muted font-16">Sign up using</p>
        <ul class="social-list list-inline mt-3">
            <li class="list-inline-item">
                <a href="javascript: void(0);" class="social-list-item border-primary text-primary"><i class="mdi mdi-facebook"></i></a>
            </li>
            <li class="list-inline-item">
                <a href="javascript: void(0);" class="social-list-item border-danger text-danger"><i class="mdi mdi-google"></i></a>
            </li>
            <li class="list-inline-item">
                <a href="javascript: void(0);" class="social-list-item border-info text-info"><i class="mdi mdi-twitter"></i></a>
            </li>
            <li class="list-inline-item">
                <a href="javascript: void(0);" class="social-list-item border-secondary text-secondary"><i class="mdi mdi-github"></i></a>
            </li>
        </ul>
    </div>
</form>

@code {
    private HttpClient httpClient = null;

    private RegistrationModel login = new RegistrationModel();

    protected override async Task OnInitializedAsync()
    {
        httpClient = clientFactory.CreateClient();
        httpClient.BaseAddress = new Uri("https://localhost:7101/api/account/register");
    }

    private async Task Submit()
    {
        StatusAuthResponse statusResponse = new StatusAuthResponse();

        HttpResponseMessage response = await httpClient.PostAsJsonAsync($"{httpClient.BaseAddress}", login);
        string apiResponse = await response.Content.ReadAsStringAsync();

        statusResponse = JsonConvert.DeserializeObject<StatusAuthResponse>(apiResponse);

        if (statusResponse.StatusCode != 200)
        {
            statusMessage = statusResponse.Message;
            StateHasChanged();
        }
    }
}
